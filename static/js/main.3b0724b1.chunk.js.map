{"version":3,"sources":["layouts/Home.jsx","redux/modules/auth.js","layouts/Login.jsx","layouts/Racks.jsx","layouts/components/NavBar.jsx","layouts/components/Layout.jsx","util/route.js","App.jsx","redux/modules/index.js","redux/store.js","index.jsx"],"names":["to","LOGIN","LOGOUT","initialState","loggedIn","connect","dispatch","login","auth","type","Form","onSubmit","event","preventDefault","user","Group","controlId","Label","Control","size","placeholder","Button","Carousel","controls","Item","src","process","alt","Caption","StyledNavbar","styled","Navbar","logout","variant","expand","className","Toggle","aria-controls","Collapse","id","Nav","Link","Text","NavDropdown","title","Divider","onClick","children","Container","fluid","mapStateToProps","AuthRoute","path","Component","component","render","props","ProtectedRoute","Layout","Racks","Login","Home","combineReducers","state","createStore","reducer","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.3b0724b1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => (\n    <div>\n        <Link to=\"/login\">Won't redirect to login page</Link>\n    </div>\n);","const LOGIN = 'ipam/auth/LOGIN';\nconst LOGOUT = 'ipam/auth/LOGOUT';\n\nconst initialState = {\n    loggedIn: false\n};\n\nexport default (state = initialState, { type, auth }) => {\n    switch (type) {\n        case LOGIN:\n            return {\n                loggedIn: true,\n                auth\n            };\n        case LOGOUT:\n            return {\n                loggedIn: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport const login = auth => ({\n    type: LOGIN,\n    auth\n});\n\nexport const logout = () => ({\n    type: LOGOUT\n});","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { login } from 'redux/modules/auth';\n\nconst mapDispatchToProps = dispatch => ({\n    login: auth => dispatch(login(auth))\n});\n\nconst Login = ({ login }) => {\n    const handleSubmit = event => {\n        event.preventDefault();\n        login({ user: 'Admin' });\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formBasicLogin\">\n                <Form.Label>Login</Form.Label>\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"User login\" />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control size=\"lg\" type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Form.Group>\n                <Button type=\"submit\">Sign in</Button>\n            </Form.Group>\n        </Form>\n    );\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Login);","import React from 'react';\nimport { Carousel } from 'react-bootstrap';\n\nexport default () => (\n    <Carousel controls>\n        <Carousel.Item>\n            <img\n                src={`${process.env.PUBLIC_URL}/img/rack_30.png`}\n                alt=\"Yet another rack_30.png\" \n            />\n            \n            <Carousel.Caption>\n                <h3>Cool rack name</h3>\n            </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n            <img\n                src={`${process.env.PUBLIC_URL}/img/rack_42.png`} \n                alt=\"Yet another rack_42.png\"\n            />\n            \n            <Carousel.Caption>\n                <h3>Damn thats big rack</h3>\n            </Carousel.Caption>\n        </Carousel.Item>\n    </Carousel>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { logout } from 'redux/modules/auth';\n\nconst mapDispatchToProps = dispatch => ({\n    logout: () => dispatch(logout())\n});\n\nconst StyledNavbar = styled(Navbar)`\n    background-color: #20232a;\n`;\n\nconst NavBar = ({ logout }) => (\n    <StyledNavbar variant=\"dark\" expand=\"lg\">\n        <Link className=\"navbar-brand\" to=\"/\">\n            IPAM\n        </Link>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n                <LinkContainer to=\"/subnets\">\n                    <Nav.Link>\n                        Subnets\n                    </Nav.Link>\n                </LinkContainer>\n\n                <LinkContainer to=\"/racks\">\n                    <Nav.Link>\n                        Racks\n                    </Nav.Link>\n                </LinkContainer>\n\n                <LinkContainer to=\"/devices\">\n                    <Nav.Link>\n                        Devices\n                    </Nav.Link>\n                </LinkContainer> \n\n                <LinkContainer to=\"/nat\">\n                    <Nav.Link>\n                        NAT\n                    </Nav.Link>\n                </LinkContainer>   \n\n                <LinkContainer to=\"/vlan\">\n                    <Nav.Link>\n                        VLAN\n                    </Nav.Link>\n                </LinkContainer>            \n            </Nav>\n            <Navbar.Text>Signed in as:</Navbar.Text>\n            <NavDropdown title=\"Admin\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item>Import</NavDropdown.Item>\n                <NavDropdown.Item>Export</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={() => logout()}>Sign out</NavDropdown.Item>\n            </NavDropdown>\n        </Navbar.Collapse>\n    </StyledNavbar>\n);\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(NavBar);","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nexport default ({ children }) => (\n    <Container fluid className=\"p-5\">\n        {children}\n    </Container>\n);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst mapStateToProps = ({ auth: { loggedIn } }) => ({\n    loggedIn\n});\n\nconst Auth = ({ loggedIn, path, component: Component }) => (\n    <Route\n        path={path}\n        render={props => (\n            loggedIn ? <Redirect to=\"/\" /> : <Component {...props} />\n        )} \n    />\n);\n\nconst Protected = ({ loggedIn, path, component: Component }) => (\n    <Route \n        path={path}\n        render={props => (\n            loggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\n        )}\n    />\n);\n\nexport const AuthRoute = connect(mapStateToProps)(Auth);\nexport const ProtectedRoute = connect(mapStateToProps)(Protected);","import React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Home, Login, Racks } from './layouts';\nimport { NavBar, Layout } from './layouts/components';\nimport { connect } from 'react-redux';\nimport { AuthRoute, ProtectedRoute } from './util/route';\n\nconst mapStateToProps = ({ auth: { loggedIn }}) => ({\n    loggedIn\n});\n\nconst App = ({ loggedIn }) => (\n    <Router>\n        {loggedIn ? <NavBar /> : null}\n        <Layout>\n            <Switch>\n                <ProtectedRoute path=\"/racks\" component={Racks} />\n                <AuthRoute path=\"/login\" component={Login} />\n                <ProtectedRoute path=\"/\" component={Home} />\n            </Switch>\n        </Layout>\n    </Router>\n);\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth,\n});","import { createStore } from 'redux';\nimport reducer from './modules';\n\nexport default createStore(reducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}